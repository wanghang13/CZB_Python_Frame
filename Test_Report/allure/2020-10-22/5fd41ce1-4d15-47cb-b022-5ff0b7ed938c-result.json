{"name": "test_member_3", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'r' referenced before assignment", "trace": "self = <test_作业.TestApi testMethod=test_member_3>, data = {'associateid': '{\"associateid\":\"1\",\"associatefield\":\"token,menu_name\"}', 'checkfield': '', 'checkstatus': '10006', 'coderesult': 'Pass', ...}\n\n    @ddt_new.data(*test_data)\n    def test_member(self, data):\n        \"\"\"\n        执行测试\n        :param data:excel数据\n        :return:\n        \"\"\"\n        logger.info(\"********************************************************************************\")\n        # 请求\n>       results = SendRequests().send_requests(self.session, data ,test_data)\n\nTest_Case/其他/test_作业.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon/RequestsSend.py:168: in send_requests\n    test_data = self.chencktestdata(test_data,old_test_data)\nCommon/RequestsSend.py:129: in chencktestdata\n    test_data['data'] = self.chenckassociateid(test_data,old_test_data)\nCommon/RequestsSend.py:106: in chenckassociateid\n    res = self.send_requests2(session,old_test_data1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.RequestsSend.SendRequests object at 0x7f8f1cf9bbd0>, session = <requests.sessions.Session object at 0x7f8f1cf77c90>\ntest_data = {'associateid': '', 'checkfield': '', 'checkstatus': '200', 'coderesult': 'Pass', ...}, param = None\n\n    def send_requests2(self, session, test_data, param=None):\n        \"\"\"\n        请求\n        :param session: session消息\n        :param test_data: 测试数据\n        :param sheet: 用例页名称\n        :param param:初始化数据\n        :return: 测试结果\n        \"\"\"\n        # print('111111111111111111111111111\\n',test_data)\n        # test_data = self.chencktestdata(test_data)\n        method = test_data[\"method\"]  # 请求方式\n        self.logger.info(\"请求方式：{}\".format(method))\n        # results = {}  # 接受返回数据\n        url = self.send_url(test_data)\n        body, params = test_data['data'], test_data['params']\n        headers = test_data['headers']\n        # 发送请求\n        try:\n            r = session.request(method=method,\n                                url=url,\n                                params=params,\n                                headers=eval(headers),\n                                data=json.dumps(eval(body)),\n                                verify=False\n                                )\n            # print(r.json()['data']['token'],'``````````````asdfjoisadfjlasdjfiosadjfo`````````````````')\n            # 保存请求结果\n            if str(r.status_code) != \"200\":\n                self.logger.error(\"请求错误！接口返回状态：%s\" % r.status_code)\n            self.logger.info(\"请求参数：{}\".format(body))\n            self.logger.info(\"检查点->：%s\" % test_data[\"checkstatus\"])\n            if test_data[\"checkstatus\"] == str(r.json()['status']):\n                # self.logger.info(\"用例执行成功！页面返回信息：%s\" % r.json()['status'])\n                self.logger.info(\"用例执行成功！页面返回信息：%s\" % r.json()['status'])\n            else:\n                self.logger.error(\"用例执行失败！页面返回信息：{}\".format(r.json()['info']))\n            self.logger.info(\"*******执行用例完成：-----  %s  ----**********\\n\" % test_data['id'])\n            # print('------------------------------------------')\n            return r.json()\n        except Exception as msg:\n            self.logger.error(\"用例执行错误！错误信息：{}\".format(msg))\n            self.logger.info(\"*******执行用例完成：-----  %s  ----**********\" % test_data['id'])\n>       return r.json()\nE       UnboundLocalError: local variable 'r' referenced before assignment\n\nCommon/RequestsSend.py:262: UnboundLocalError"}, "description": "\n        执行测试\n        :param data:excel数据\n        :return:\n        ", "attachments": [{"name": "log", "source": "32446655-510f-4e94-b271-eecbade833b1-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "7be8254c-b7b8-415f-b8c4-6b72d2535b5d-attachment.txt", "type": "text/plain"}], "start": 1603372225206, "stop": 1603372233655, "uuid": "f98614cc-9218-45e0-8d1c-f3cad917eb2d", "historyId": "98b086dcd2fc4c94ef4dee1d0893531a", "testCaseId": "fdd60001e986f0160ce44a4b5ea4c602", "fullName": "Test_Case.其他.test_作业.TestApi#test_member_3", "labels": [{"name": "parentSuite", "value": "Test_Case.其他"}, {"name": "suite", "value": "test_作业"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "Hang-2.local"}, {"name": "thread", "value": "4762-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Case.其他.test_作业"}]}